trigger: none

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
<<<<<<< HEAD
      ref: refs/heads/private-dns
=======
      ref: refs/heads/master
>>>>>>> master
      endpoint: hmcts

    - repository: user-api
      type: github
      name: hmcts/vh-user-api
      ref: refs/heads/master
      endpoint: hmcts

    - repository: video-api
      type: github
      name: hmcts/vh-video-api
      ref: refs/heads/master
      endpoint: hmcts

    - repository: video-web
      type: github
      name: hmcts/vh-video-web
      ref: refs/heads/master
      endpoint: hmcts

    - repository: bookings-api
      type: github
      name: hmcts/vh-bookings-api
      ref: refs/heads/master
      endpoint: hmcts

    - repository: notification-api
      type: github
      name: hmcts/vh-notification-api
      ref: refs/heads/master
      endpoint: hmcts

    - repository: test-web
      type: github
      name: hmcts/vh-test-web
      ref: refs/heads/master
      endpoint: hmcts

    - repository: test-api
      type: github
      name: hmcts/vh-test-api
      ref: refs/heads/VIH-7245-test-api
      endpoint: hmcts

    - repository: admin-web
      type: github
      name: hmcts/vh-admin-web
      ref: refs/heads/master
      endpoint: hmcts

    - repository: service-web
      type: github
      name: hmcts/vh-service-web
      ref: refs/heads/master
      endpoint: hmcts

    - repository: booking-queue-subscriber
      type: github
      name: hmcts/vh-booking-queue-subscriber
      ref: refs/heads/master
      endpoint: hmcts

    - repository: scheduler-jobs
      type: github
      name: hmcts/vh-scheduler-jobs
      ref: refs/heads/master
      endpoint: hmcts

    - repository: cnp-library
      type: github
      name: hmcts/cnp-azuredevops-libraries
      ref: refs/heads/master
      endpoint: hmcts

parameters:
  - name: git_repo_name
    displayName: Git Repo Name
    type: string
    values:
      - user-api
      - video-api
      - video-web
      - bookings-api
      - notification-api
      - test-web
      - test-api
      - admin-web
      - service-web
      - booking-queue-subscriber
      - scheduler-jobs
  - name: env
    type: string
    values:
      - stg
      - dev
  - name: cluster
    displayName: Cluster ID to use
    type: string
    values:
      - 00
      - 01
      
stages:

  - stage: Dock
    displayName: Build and Push Docker Image
    variables:
      - name: subscription
        value: 'DTS-SHAREDSERVICES-PROD-Video Hearings'
      - name: k8sSubscription
        value: "DTS-SHAREDSERVICES-${{ upper(parameters.env) }}-Video Hearings"
      - name: acrName
        value: 'sdshmctspublic'
      - name: repositoryName
        value: 'vh/${{ parameters.git_repo_name }}'
      - name: chartPath
        value: '$(Build.SourcesDirectory)/vh-${{ parameters.git_repo_name }}/charts/vh-${{ parameters.git_repo_name }}'
    jobs:
      - job:
        steps:
          - checkout: self
          - checkout: ${{ parameters.git_repo_name }}
        
          - bash: |
              echo "testing. Repo name ${{ parameters.git_repo_name }}"
              cd $(Build.SourcesDirectory)/vh-${{ parameters.git_repo_name }}
              git switch -c $(Build.SourceBranchName)
            displayName: 'Branch Checkout'
        
          - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates
            parameters:
              azureSubscription: ${{ variables.subscription }}
              acrName: ${{ variables.acrName }}
              repositoryName:  ${{ variables.repositoryName }}
            
          - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
            parameters:
              azureSubscription: ${{ variables.subscription }}
              acrName: ${{ variables.acrName }}
              repositoryName:  ${{ variables.repositoryName }}
              imageName: "${{ replace(parameters.git_repo_name, '-', '') }}"
              imageTags:
                - '$(Build.BuildNumber)'
                - 'latest'
              
      
          - template: templates\Containerisation\helm\helm-push-v2-max.yaml@azTemplates
            parameters:
              azureSubscription: ${{ variables.subscription }}
              acrName: ${{ variables.acrName }}
              repositoryName:  ${{ variables.repositoryName }}
              chartName: 'vh-${{ parameters.git_repo_name }}'
              chartPath: '$(Build.SourcesDirectory)/vh-${{ parameters.git_repo_name }}/charts/vh-${{ parameters.git_repo_name }}'

          - template: templates\Containerisation\helm\helm-deploy.yaml@azTemplates
            parameters:
              azureSubscription: ${{ variables.k8sSubscription }}
              kubernetesCluster: "ss-${{ parameters.env }}-01"
              chartName: 'vh-${{ parameters.git_repo_name }}'
              chartPath: '$(Build.SourcesDirectory)/vh-${{ parameters.git_repo_name }}/charts/vh-${{ parameters.git_repo_name }}'
              imageTag: '$(Build.BuildNumber)'

  - stage: Install
    displayName: Deploy Helm  chart to ss-${{ parameters.env }}-00-aks
    variables:
      - name: azureSubscription
        value: "DTS-SHAREDSERVICES-${{ upper(parameters.env) }}-Video Hearings"
      - name: acrName
        value: 'sdshmctspublic'
      - name: repositoryName
        value: 'vh/${{ parameters.git_repo_name }}'
      - name: tagName
        value: "pr-$(System.PullRequest.PullRequestId)"
      - name: dnsZone
        value: ${{ parameters.env }}.platform.hmcts.net
      - name: dnsRecordName
        value: ${{ parameters.git_repo_name }}-dotnet-${{ variables.tagName }}
    jobs:
      - job:
        steps:
          - bash: |
              export IMAGE_NAME="'${imageName}'"
              export SERVICE_FQDN="${fqdn}"
                            
              valuesEnvTemplate="./charts/vh-testing/values.${env}.template.yaml"
              valuesEnv="./charts/vh-testing/values.${env}.yaml"
              
              if test -f "$valuesEnvTemplate"; then
                envsubst < ${valuesEnvTemplate} > ${valuesEnv}
              fi
            displayName: Set Environment Values
            env:
              imageName: ${{ variables.acrName }}.azurecr.io/${{ variables.repositoryName }}:${{ variables.tagName }}
              fqdn: ${{ variables.dnsRecordName }}.${{ variables.dnsZone }}
              env: ${{ parameters.env }}
  
                      
          - template: templates\Containerisation\helm\helm-deploy.yaml@azTemplates
            parameters:
              azureSubscription: ${{ variables.azureSubscription }}
              kubernetesCluster: "ss-${{ parameters.env }}-01"
              chartName: 'vh-${{ parameters.git_repo_name }}'
              chartPath:
              imageTag: 'latest'

          - template: templates\Azure\Dns\private-dns-add-aks-pr.yaml
            parameters:
              subscriptionName: ${{ variables.azureSubscription }}
              aksSubscriptionName: "DTS-SHAREDSERVICES-${{ upper(parameters.env) }}"
              aksResourceGroupName: "ss-${{ parameters.env }}-${{ parameters.cluster }}-rg"
              aksClusterName: "ss-${{ parameters.env }}-${{ parameters.cluster }}-aks"
              dnsSubscriptionName: "DTS-CFTPTL-INTSVC"
              dnsResourceGroupName: "core-infra-intsvc-rg"
              zoneName: ${{ variables.dnsZone }}
              recordName: ${{ variables.dnsRecordName }}

  #- stage: Validate
  #  dependsOn: Dock
  #  displayName: Validate Helm Charts
  #  pool:
  #    vmImage: 'Ubuntu 18.04'
  #  jobs:
  #    - job:
  #      steps:  
  #      - task: Bash@3
  #        displayName: logger
  #        inputs:
  #          targetType: inline
  #          script: pwd && echo "Our contents :" && ls -ltr $(System.DefaultWorkingDirectory)  
  #    
  #    
  #    - template: ./steps/charts/validate.yaml
  #      parameters:  
  #        serviceConnection: "DTS-SHAREDSERVICES-STG-Video Hearings"
  #        registryServiceConnection: "DTS-SHAREDSERVICES-PROD-Video Hearings"
  #        aksResourceGroup: "ss-stg-00-rg"
  #        aksCluster: "ss-stg-00-aks"
  #        acrName: "sdshmctspublic"
  #        chartName: "vh-${{ parameters.git_repo_name }}"
  #        chartReleaseName: "vh-${{ parameters.git_repo_name }}"
  #        chartNamespace: "VH"
  #        chartPath: "./"
  #        helmVersion: "3.5.2"
  #        helmInstallTimeout: "120"
  #        helmTestTimeout: "300"
  #        helmDeleteWait: "0"
  #        helmInstallWait: "0"
  #        valuesFile: "values.yaml"
  #          
  #    - template: ./steps/charts/release.yaml
  #      parameters:  
  #        serviceConnection: "DTS-SHAREDSERVICES-STG-Video Hearings"
  #        registryServiceConnection: "DTS-SHAREDSERVICES-PROD-Video Hearings"
  #        aksResourceGroup: "ss-stg-00-rg"
  #        aksCluster: "ss-stg-00-aks"
  #        acrName: "sdshmctspublic"
  #        chartName: "vh-${{ parameters.git_repo_name }}"
  #        chartReleaseName: "vh-${{ parameters.git_repo_name }}"
  #        chartNamespace: "VH"
  #        chartPath: "./"
  #        helmVersion: "3.5.2"
      
    #- template: /steps/charts/validate.yaml@cnp-library
    #  parameters:
    #    chartName: vh-${{ parameters.git_repo_name }}
    #    chartReleaseName: ${{ parameters.git_repo_name }}
    #    chartNamespace: "vh"
    #    chartPath: "$(System.DefaultWorkingDirectory)/vh-${{ parameters.git_repo_name }}/charts/"
    #    helmInstallTimeout: "500"
    #    serviceConnection: "DTS-SHAREDSERVICES-PROD"
    #    registryServiceConnection: "DTS-SHAREDSERVICES-PROD"
    #    aksResourceGroup: "ss-prod-00-rg"
    #    aksCluster: "ss-prod-00-aks"
    #    acrName: "sdshmctspublic"



